{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igorl\\\\Downloads\\\\geardepo5-master\\\\client\\\\src\\\\components\\\\NavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { AppBar, Box, Button, Container, IconButton, Toolbar, Typography } from '@mui/material';\nimport { Lock, Menu } from '@mui/icons-material';\nimport { useValue } from '../context/ContextProvider';\nimport UserIcons from './user/UserIcons';\nimport FilterSearch from './filtersearch/FilterSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NavBar = () => {\n  _s();\n  const {\n    state: {\n      currentUser\n    },\n    dispatch\n  } = useValue();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: 'white',\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mr: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              color: \"primary\",\n              onClick: () => setIsOpen(true),\n              children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h1\",\n            noWrap: true,\n            sx: {\n              flexGrow: 1,\n              color: 'black'\n            },\n            children: \"LOGO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), !currentUser ? /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(Lock, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 28\n            }, this),\n            onClick: () => dispatch({\n              type: 'OPEN_LOGIN'\n            }),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(UserIcons, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterSearch, {\n      isOpen,\n      setIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NavBar, \"pCC/UEtUF1Xf416dxYLLmCxpoXg=\", false, function () {\n  return [useValue];\n});\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","AppBar","Box","Button","Container","IconButton","Toolbar","Typography","Lock","Menu","useValue","UserIcons","FilterSearch","jsxDEV","_jsxDEV","Fragment","_Fragment","NavBar","_s","state","currentUser","dispatch","isOpen","setIsOpen","children","position","sx","backgroundColor","color","maxWidth","disableGutters","mr","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","noWrap","flexGrow","startIcon","type","_c","$RefreshReg$"],"sources":["C:/Users/igorl/Downloads/geardepo5-master/client/src/components/NavBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  AppBar,\n  Box,\n  Button,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport { Lock, Menu } from '@mui/icons-material';\nimport { useValue } from '../context/ContextProvider';\nimport UserIcons from './user/UserIcons';\nimport FilterSearch from './filtersearch/FilterSearch';\n\n\nconst NavBar = () => {\n  const {\n    state: { currentUser },\n    dispatch,\n  } = useValue();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <AppBar position=\"static\" sx={{ backgroundColor: 'white', color: 'black' }}>\n        <Container maxWidth=\"lg\">\n          <Toolbar disableGutters>\n            <Box sx={{ mr: 1 }}>\n              <IconButton size=\"large\" color=\"primary\" onClick={()=>setIsOpen(true)}>\n                <Menu />\n              </IconButton>\n            </Box>\n            <Typography\n              variant=\"h6\"\n              component=\"h1\"\n              noWrap\n              sx={{ flexGrow: 1, color: 'black' }}\n            >\n              LOGO\n            </Typography>\n            {!currentUser ? (\n              <Button\n                color=\"primary\"\n                startIcon={<Lock />}\n                onClick={() => dispatch({ type: 'OPEN_LOGIN' })}\n              >\n                Login\n              </Button>\n            ) : (\n              <UserIcons />\n            )}\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <FilterSearch {...{isOpen, setIsOpen}}/>\n    </>\n  );\n};\n\nexport default NavBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}