{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useValue } from '../context/ContextProvider';\nimport { jwtDecode } from 'jwt-decode';\nconst useCheckToken = () => {\n  _s();\n  const {\n    state: {\n      currentUser\n    },\n    dispatch\n  } = useValue();\n  useEffect(() => {\n    if (currentUser) {\n      const decodedToken = jwtDecode(currentUser.token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) dispatch({\n        type: 'UPDATE_USER',\n        payload: null\n      });\n    }\n  }, [currentUser, dispatch]);\n};\n_s(useCheckToken, \"ByKkSkV44ClGal0X/yLch3IHi00=\", false, function () {\n  return [useValue];\n});\nexport default useCheckToken;","map":{"version":3,"names":["React","useEffect","useValue","jwtDecode","useCheckToken","_s","state","currentUser","dispatch","decodedToken","token","exp","Date","getTime","type","payload"],"sources":["C:/Users/igorl/Downloads/geardepo5-master/client/src/hooks/useCheckToken.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useValue } from '../context/ContextProvider'\nimport {jwtDecode}  from 'jwt-decode'\n\nconst useCheckToken = () => {\n  const {state:{currentUser}, dispatch} = useValue();\n  useEffect(()=>{\n    if(currentUser){\n        const decodedToken = jwtDecode(currentUser.token)\n        if(decodedToken.exp * 1000 < new Date().getTime()) \n        dispatch({type:'UPDATE_USER', payload:null});\n    }\n  },[currentUser, dispatch])\n}\n\nexport default useCheckToken"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAAQC,SAAS,QAAQ,YAAY;AAErC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAACC,KAAK,EAAC;MAACC;IAAW,CAAC;IAAEC;EAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAClDD,SAAS,CAAC,MAAI;IACZ,IAAGM,WAAW,EAAC;MACX,MAAME,YAAY,GAAGN,SAAS,CAACI,WAAW,CAACG,KAAK,CAAC;MACjD,IAAGD,YAAY,CAACE,GAAG,GAAG,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,EACjDL,QAAQ,CAAC;QAACM,IAAI,EAAC,aAAa;QAAEC,OAAO,EAAC;MAAI,CAAC,CAAC;IAChD;EACF,CAAC,EAAC,CAACR,WAAW,EAAEC,QAAQ,CAAC,CAAC;AAC5B,CAAC;AAAAH,EAAA,CATKD,aAAa;EAAA,QACuBF,QAAQ;AAAA;AAUlD,eAAeE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}