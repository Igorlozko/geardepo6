{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igorl\\\\Downloads\\\\geardepo5-master\\\\client\\\\src\\\\components\\\\addGear\\\\addLocation\\\\AddLocation.js\",\n  _s = $RefreshSig$();\nimport { Box } from '@mui/material';\nimport React, { useEffect, useRef } from 'react';\nimport ReactMapGL, { GeolocateControl, Marker, NavigationControl } from 'react-map-gl';\nimport { useValue } from '../../../context/ContextProvider';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport Geocoder from './Geocoder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddLocation = () => {\n  _s();\n  const {\n    state: {\n      location: {\n        lng,\n        lat\n      }\n    },\n    dispatch\n  } = useValue();\n  const mapRef = useRef();\n  //map\n  useEffect(() => {\n    if (!lng && !lat) {\n      fetch('https://ipapi.co/json').then(response => {\n        return response.json();\n      }).then(data => {\n        mapRef.current.flyTo({\n          center: [data.longitude, data.latitude]\n        });\n        dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: data.longitude,\n            lat: data.latitude\n          }\n        });\n      });\n    } else {}\n  }, [mapRef]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: 400,\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactMapGL, {\n      ref: mapRef,\n      mapboxAccessToken: process.env.REACT_APP_MAP_TOKEN,\n      initialViewState: {\n        longitude: lng,\n        latitude: lat,\n        zoom: 8\n      },\n      mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        latitude: lat,\n        longitude: lng,\n        draggable: true,\n        onDragEnd: e => dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: e.lngLat.lng,\n            lat: e.lngLat.lat\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NavigationControl, {\n        position: \"bottom-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GeolocateControl, {\n        position: \"top-left\",\n        trackUserLocation: true,\n        onGeolocate: e => dispatch({\n          type: 'UPDATE_LOCATION',\n          payload: {\n            lng: e.coords.longitude,\n            lat: e.coords.latitude\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Geocoder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AddLocation, \"b/d2iBzDNZ1G3hKsSfA4Y9T4RLY=\", false, function () {\n  return [useValue];\n});\n_c = AddLocation;\nexport default AddLocation;\nvar _c;\n$RefreshReg$(_c, \"AddLocation\");","map":{"version":3,"names":["Box","React","useEffect","useRef","ReactMapGL","GeolocateControl","Marker","NavigationControl","useValue","Geocoder","jsxDEV","_jsxDEV","AddLocation","_s","state","location","lng","lat","dispatch","mapRef","fetch","then","response","json","data","current","flyTo","center","longitude","latitude","type","payload","sx","height","position","children","ref","mapboxAccessToken","process","env","REACT_APP_MAP_TOKEN","initialViewState","zoom","mapStyle","draggable","onDragEnd","e","lngLat","fileName","_jsxFileName","lineNumber","columnNumber","trackUserLocation","onGeolocate","coords","_c","$RefreshReg$"],"sources":["C:/Users/igorl/Downloads/geardepo5-master/client/src/components/addGear/addLocation/AddLocation.js"],"sourcesContent":["import { Box } from '@mui/material'\nimport React, { useEffect, useRef } from 'react'\nimport ReactMapGL, { GeolocateControl, Marker, NavigationControl } from 'react-map-gl';\nimport { useValue } from '../../../context/ContextProvider';\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport Geocoder from './Geocoder';\n\nconst AddLocation = () => {\n\n    const {state:{location:{lng,lat}}, dispatch} = useValue();\n\n    const mapRef = useRef();\n    //map\n    useEffect(()=>{\n        if(!lng && !lat){\n            fetch('https://ipapi.co/json')\n            .then(response =>{\n                return response.json();\n            }).then(data => {\n                mapRef.current.flyTo({\n                    center: [data.longitude, data.latitude]\n                });\n                dispatch({type:'UPDATE_LOCATION', payload:{lng:data.longitude, lat:data.latitude}});\n            })\n        }else{\n\n        }\n    },[mapRef])\n\n    return (\n        <Box\n            sx={{\n                height:400,\n                position:'relative'\n            }}\n        >\n            <ReactMapGL\n            ref={mapRef}\n                mapboxAccessToken={process.env.REACT_APP_MAP_TOKEN}\n                initialViewState={{\n                    longitude: lng,\n                    latitude: lat,\n                    zoom:8\n                }}\n                mapStyle='mapbox://styles/mapbox/streets-v11'\n            >\n                <Marker\n                    latitude={lat}\n                    longitude={lng}\n                    draggable\n                    onDragEnd={(e)=> dispatch({type:'UPDATE_LOCATION', \n                    payload:{lng:e.lngLat.lng, lat:e.lngLat.lat}})}\n                />\n                <NavigationControl position='bottom-right'/> \n                <GeolocateControl\n                    position='top-left'\n                    trackUserLocation\n                    onGeolocate={(e)=> dispatch({type:'UPDATE_LOCATION', payload:{lng:e.coords.longitude, lat:e.coords.latitude}})}\n                />\n                <Geocoder/>\n            </ReactMapGL>\n        </Box>\n    )\n}\n\nexport default AddLocation"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}